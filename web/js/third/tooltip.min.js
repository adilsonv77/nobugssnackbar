!function(t,o){"function"==typeof define&&define.amd?define(["drop","tether"],o):"object"==typeof exports?module.exports=o(require("drop"),require("tether")):t.Tooltip=o(t.Drop,t.Tether)}(this,function(t,o){"use strict";function e(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}var n=function(){function t(t,o){for(var e=0;e<o.length;e++){var n=o[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(o,e,n){return e&&t(o.prototype,e),n&&t(o,n),o}}(),i=o.Utils.extend,r=t.createContext({classPrefix:"tooltip"}),s={position:"top center",openOn:"hover",classes:"tooltip-theme-arrows",constrainToWindow:!0,constrainToScrollParent:!1},p=function(){function t(o){if(e(this,t),this.options=o,!this.options.target)throw new Error("Tooltip Error: You must provide a target for Tooltip to attach to");var n=this.options.target.getAttribute("data-tooltip-position");n&&"undefined"==typeof this.options.position&&(this.options.position=n);var p=this.options.target.getAttribute("data-tooltip");if(p&&"undefined"==typeof this.options.content&&(this.options.content=p),!this.options.content)throw new Error("Tooltip Error: You must provide content for Tooltip to display");this.options=i({},s,this.options),this.drop=new r(this.options)}return n(t,[{key:"close",value:function(){this.drop.close()}},{key:"open",value:function(){this.drop.open()}},{key:"toggle",value:function(){this.drop.toggle()}},{key:"remove",value:function(){this.drop.remove()}},{key:"destroy",value:function(){this.drop.destroy()}},{key:"position",value:function(){this.drop.position()}}]),t}(),a=[];return p.init=function(){for(var t=document.querySelectorAll("[data-tooltip]"),o=t.length,e=0;o>e;++e){var n=t[e];-1===a.indexOf(n)&&(new p({target:n}),a.push(n))}},document.addEventListener("DOMContentLoaded",function(){p.autoinit!==!1&&p.init()}),p});