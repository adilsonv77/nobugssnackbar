<?xml version="1.0"?>
<project name="Utility-Tasks" default="soy" basedir=".">
	
	<property name="blockly.dir" location="D:\\doutoramento\\blockly" />
	<property name="dest.dir" location="web" />
	
	<target name="copy" depends="">
		<description>Copy files from Blockly Project to this project</description>
		
		<delete dir="blocks"/>
		<delete dir="core"/>
		<delete dir="generators"/>
		
		<delete dir="${dest.dir}/commons"/>
		<delete dir="${dest.dir}/media"/>
		<delete dir="${dest.dir}/msg"/>
		<delete dir="${dest.dir}/../_soy"/>
		<delete dir="${dest.dir}/../i18n"/>

		<copy todir="${dest.dir}/../_soy">
			<fileset dir="${blockly.dir}/apps/_soy"/>
		</copy>

		<copy todir="${dest.dir}/../i18n">
			<fileset dir="${blockly.dir}/i18n"/>
		</copy>
		
		<copy todir="blocks">
			<fileset dir="${blockly.dir}/blocks"/>
		</copy>
		
		<copy todir="${dest.dir}/commons">
			<fileset dir="${blockly.dir}/apps">
				<include name="**/common.*"/>
				<exclude name="**/*.soy"/>
			</fileset>
		</copy>

		<copy todir="core">
			<fileset dir="${blockly.dir}/core"/>
		</copy>
		
		<copy todir="generators">
			<fileset dir="${blockly.dir}/generators" excludes="dart/">
				<exclude name="**/dart*"/>
			</fileset>
		</copy>
		
		<copy todir="${dest.dir}/media">
			<fileset dir="${blockly.dir}/media"/>
		</copy>
		
		<copy todir="${dest.dir}/msg">
			<fileset dir="${blockly.dir}/msg"/>
		</copy>
		
		<copy todir="${dest.dir}">
			<fileset dir="${blockly.dir}" 
				includes="blockly_compressed.js blocks_compressed.js javascript_compressed.js python_compressed.js"/>
		</copy>
		
		<copy todir="${dest.dir}">
			<fileset dir="${blockly.dir}/apps" 
				includes="**/prettify.*"/>
		</copy>
	</target>

	<target name="soy" depends="">
		<description>Creates the pages based on a template</description>
		<java jar="_soy/SoyMsgExtractor.jar" fork="true">
			<arg line="--outputFile extracted_msgs.xlf --srcs hints.soy,common.soy,template.soy"/>
		</java>
		
		<!-- Need Python version 2.7.8 -->
		<exec executable="python">
			<arg value="i18n\xliff_to_json.py"/>
			<arg value="--xlf"/>
			<arg value="extracted_msgs.xlf"/>
			<arg value="--templates"/>
			<arg value="hints.soy"/>
			<arg value="common.soy"/>
			<arg value="template.soy"/>
		</exec>
		
		<exec executable="python">
			<arg value="i18n\json_to_js.py"/>
			<arg value="--path_to_jar=.\_soy"/>
			<arg value="--output_dir=web\generated"/>
			<arg value="--template"/>
			<arg value="hints.soy,common.soy,template.soy"/>
			<arg value="json\*.json"/>
		</exec>
		
	</target>
	
	<target name="compress">
		<description>Compress the javascript files</description>
		
		<property name="js.home" value="${basedir}/web/nobugs" />
		<property name="js.host" value="${js.home}/nobugs-min.js" />
		
		<delete file="${js.host}" />
		
		<!-- http://yui.github.io/yuicompressor/ -->
		<!-- https://github.com/yui/yuicompressor -->
		<java jar="${basedir}/web/WEB-INF/lib/yuicompressor-2.4.8.jar" fork="true">
			
			<!-- 'line-break' delimit the max number of characters and create a line break when this number is reached -->
			<!--<arg line="-line-break 200" />-->
			
			<!-- 'o' define what the output file -->
			<arg line="-o ${js.host}"/>
			
			<!-- list of files to compress -->
			<arg line="${js.home}/blockly.js" />
			<arg line="${js.home}/customer.js" />
			<arg line="${js.home}/customerman.js" />
			<arg line="${js.home}/explanation.js" />
			<arg line="${js.home}/game.js" />
			<arg line="${js.home}/graph.js" />
			<arg line="${js.home}/hints.js" />
			<arg line="${js.home}/language.js" />
			<arg line="${js.home}/money.js" />
			<arg line="${js.home}/nobugsblocklygeneratorjavascript.js" />
			<arg line="${js.home}/nobugsjsinterpreter.js" />
			<arg line="${js.home}/objectives.js" />
			<arg line="${js.home}/preloadimgs.js" />
			<arg line="${js.home}/questionnaire.js" />
			<arg line="${js.home}/slider.js" />
			<arg line="${js.home}/snackman.js" />
			<arg line="${js.home}/sprite.js" />
			<arg line="${js.home}/utils.js" />
			<arg line="${js.home}/variablenamesvalidate.js" />
			<arg line="${js.home}/xml.js" />
			
		</java>
	</target>
	
</project>