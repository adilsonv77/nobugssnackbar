<?xml version="1.0"?>
<project name="Utility-Tasks" basedir="." default="help">
	
	<!-- Defines a reference to enviroments variables -->
    <property environment="e"/>
	
	<!-- File name of project properties -->
	<property name="file.properties" value="build.properties" />
    <!-- Relating properties of web application enviroment comes from build.properties file -->
	<property file="${file.properties}" />
	
	<property name="blockly.dir" location="D:\\doutoramento\\blockly" />
	<property name="dest.dir" location="web" />
	
	<target name="help">
		<echo message = "Use:"/>
		<echo message = "ant soydescompress      - Creates the pages based on a template and descompressed imports"/>
		<echo message = "ant soycompress         - Creates the pages based on a template and compressed imports"/>
		<echo message = "ant compress            - Compress the nobugs javascript files" />
		<echo message = "ant war                 - Generates the Web Application Archive (WAR)"/>
		<echo message = "ant clean               - Clean build directories"/>
		<echo message = "ant init                - Create build directories"/>
	</target>
	
	<target name="copy" depends="">
		<description>Copy files from Blockly Project to this project</description>
		
		<delete dir="blocks"/>
		<delete dir="core"/>
		<delete dir="generators"/>
		
		<delete dir="${dest.dir}/media"/>
		<delete dir="${dest.dir}/js/msg"/>
		<delete dir="${dest.dir}/../_soy"/> 
		<delete dir="${dest.dir}/../i18n"/>

		<copy todir="${dest.dir}/../_soy">
			<fileset dir="${blockly.dir}/demos/plane/soy"/>
		</copy>

		<copy todir="${dest.dir}/../i18n">
			<fileset dir="${blockly.dir}/i18n"/>
		</copy>
		
		<copy todir="blocks">
			<fileset dir="${blockly.dir}/blocks"/>
		</copy>
		<copy todir="core">
			<fileset dir="${blockly.dir}/core"/>
		</copy>
		
		<copy todir="generators">
			<fileset dir="${blockly.dir}/generators" excludes="dart/">
				<exclude name="**/dart*"/>
			</fileset>
		</copy>
		
		<copy todir="${dest.dir}/media">
			<fileset dir="${blockly.dir}/media"/>
		</copy>
		
		<copy todir="${dest.dir}/js/msg">
			<fileset dir="${blockly.dir}/msg"/>
		</copy>
		
		<copy todir="${dest.dir}/js">
			<fileset dir="${blockly.dir}" 
				includes="blockly_compressed.js blocks_compressed.js javascript_compressed.js python_compressed.js"/>
		</copy>
		
		<copy todir="${dest.dir}">
			<fileset dir="${blockly.dir}/demos" 
				includes="**/prettify.*"/>
		</copy>
	</target>

	<macrodef name="genapp">
		<attribute name="fileimport"/>
		<sequential>
			<java jar="_soy/SoyMsgExtractor.jar" fork="true">
				<arg line="--outputFile src/pt/uc/dei/nobugssnackbar/i18n/extracted_msgs.xlf --srcs @{fileimport},hints.soy,common.soy,messages.soy,commonheader.soy,editor.soy,avatareditor.soy,template.soy"/>
			</java>
		
			<exec executable="python">
				<arg value="i18n\xliff_to_json.py"/>
				<arg value="--output_dir"/>
				<arg value="src/pt/uc/dei/nobugssnackbar/i18n"/>
				<arg value="--xlf"/>
				<arg value="src/pt/uc/dei/nobugssnackbar/i18n/extracted_msgs.xlf"/>
				<arg value="--templates"/>
				<arg value="@{fileimport}"/>
				<arg value="hints.soy"/>
				<arg value="common.soy"/>
				<arg value="messages.soy"/>
				<arg value="commonheader.soy"/>
				<arg value="editor.soy"/>
				<arg value="avatareditor.soy"/>
				<arg value="template.soy"/>
			</exec>
			
			<exec executable="python">
				<arg value="i18n\json_to_js.py"/>
				<arg value="--key_file=src/pt/uc/dei/nobugssnackbar/i18n/keys.json"/>
				<arg value="--path_to_jar=.\_soy"/>
				<arg value="--output_dir=web/js/generated"/>
				<arg value="--template"/>
				<arg value="@{fileimport},hints.soy,common.soy,messages.soy,commonheader.soy,editor.soy,avatareditor.soy,template.soy"/>
				<arg value="src/pt/uc/dei/nobugssnackbar/i18n/*.json"/>
			</exec>
			
			<delete file="src/pt/uc/dei/nobugssnackbar/i18n/qqq.json" />
			<delete file="src/pt/uc/dei/nobugssnackbar/i18n/keys.json" />
			
		</sequential>
	</macrodef>
	
	<target name="soydescompress" depends="">
		<description>Creates the pages based on a template and descompressed imports</description>
		<genapp fileimport="importjs_descompressed.soy"/>
	</target>
		
	<target name="soycompress" depends="compress">
		<description>Creates the pages based on a template and compressed imports</description>
		<genapp fileimport="importjs_compressed.soy"/>
	</target>
	
	<path id="lib.base">
		<pathelement path="${classpath}"/>
	    <pathelement path="${build.home}"/>
	    <fileset dir="${basedir}/lib">
	    	<include name="**/*.jar"/>
	    </fileset>
	</path>
	
	<target name="compress">
		<description>Compress the nobugs javascript files</description>
		
		<delete file="${js.compress.out}" />
		
		<!-- http://yui.github.io/yuicompressor/ -->
		<!-- https://github.com/yui/yuicompressor -->
		<java classpath="${build.home}" classname="nobugssnackbar.YUICompressor" fork="true">
			
			<!-- 'o' define what the output file -->
			<arg line="-o ${js.compress.out}"/>
			
			<!-- list of files to compress -->
			<arg line="${js.home}/navigator.js" />
			<arg line="${js.home}/language.js" />
			<arg line="${js.home}/slider.js" />
			<arg line="${js.home}/utils.js" />
			<arg line="${js.home}/preloadimgs.js" />
			<arg line="${js.home}/game.js" />
			<arg line="${js.home}/explanation.js" />
			<arg line="${js.home}/hints.js" />
			<arg line="${js.home}/blockly.js" />
			<arg line="${js.home}/graph.js" />
			<arg line="${js.home}/snackman.js" />
			<arg line="${js.home}/customer.js" />
			<arg line="${js.home}/customerman.js" />
			<arg line="${js.home}/sprite.js" />
			<arg line="${js.home}/nobugsjsinterpreter.js" />
			<arg line="${js.home}/nobugsblocklygeneratorjavascript.js" />
			<arg line="${js.home}/xml.js" />
			<arg line="${js.home}/objectives.js" />
			<arg line="${js.home}/questionnaire.js" />
			<arg line="${js.home}/variablenamesvalidate.js" />
			<arg line="${js.home}/selector.js" />
			<arg line="${js.home}/baloon.js" />
			<arg line="${js.home}/progressmoney.js" />
			<arg line="${js.home}/leaderboard.js" />
			<arg line="${js.home}/citymap.js" />
			<arg line="${js.home}/selectmission.js" />
			<arg line="${js.home}/nobugsingrid.js" />
			<arg line="${js.home}/avatar.js" />
			<arg line="${js.home}/chardialog.js" />
			<arg line="${js.home}/intro.js" />
			
			<classpath>
				<path refid="lib.base" />
			</classpath>
		</java>
	</target>
	
	<target name="war" depends="clean, init, soycompress">
		<war destfile="${war.home}/${app.name}.war" webxml="${web.home}/WEB-INF/web.xml">
	    	<fileset dir="${web.home}" >

	    		<include name="js/**/**/*.*" />
	    		<exclude name="js/jsinterpreter/acorn.js"/>
	    		<exclude name="js/jsinterpreter/interpreter.js"/>

	    		<include name="css/**/**/*.*" />
	    		
	    		<include name="_soy/**/*.*" />
	    		<include name="commons/**/*.*" />
	    		<include name="generated/**/*.*" />
	    		<include name="images/**/*.*" />
	    		<include name="media/**/*.*" />
	    		<include name="xml/ns/**/*.*" />
	    		<include name="META-INF/**/*.*" />
	    		<include name="js/msg/js/en_us.js" />
	    		<include name="js/msg/js/pt-br.js" />
	    		<include name="js/msg/js/pt-pt.js" />
	    		<include name="js/msg/json/en.json" />
	    		<include name="js/msg/json/pt-br.json" />
	    		<include name="js/msg/json/pt-pt.json" />
	    		<include name="js/msg/messages.js" />
	    		<include name="js/nobugs/nobugs-min.js" />
	    		
	    		<!-- temporariamente por causa do questionario que pode ser aplicado em outro momento -->
	    		<!--
	    		<include name="js/nobugs/quest.js" />
	    		<include name="js/nobugs/questionnaire.js" />
		    	<include name="js/nobugs/blockly.js" />
		    	-->
	    		<!-- -->
	    		
	    		<include name="WEB-INF/**/*.*" />
	    		<include name="*.js" />
	    		<include name="*.css" />
	    		<include name="index.html" />
	    		<include name="error.html" />
	    		<include name="quest.html" />

	    		<include name="jsp/**/*.*" />
	        </fileset>
	        <classes dir="${build.home}" >
	            <include name="**/*.class" />
	            <include name="**/*.properties" />
	            <include name="**/*.xml" />
	        	<exclude name="nobugssnackbar/**/*.*"/>
	        </classes>
	    </war>
	</target>
	
	<target name="clean" depends="init">
		<delete includeEmptyDirs="true">
	        <fileset dir="${war.home}"/>
	    </delete>
	</target>
	
	<target name="init">
	    <mkdir dir="${war.home}"/>
	</target>
	
</project>